---
- block:
  - name: install scm packages
    apt: "name={{ packages }} state=latest"
    vars:
      packages:
        - git

  - name: create web root dir
    file:
      path: "{{ python_wsgiapps_web_base_dir }}"
      state: "directory"
      mode: "0711"
      owner: "root"
      group: "root"

  - name: get root of base dirs
    shell: "dirname {{ item.base_dir }}"
    register: base_dirs
    loop: "{{ python_wsgiapps }}"

  - name: checkout source code via scm
    command: "{{ item.scm }} clone {{ item.repo_url }} {{ item.base_dir }}"
    args:
      creates: "{{ item.base_dir }}"
    loop: "{{ python_wsgiapps }}"

  - name: create virtualenv under the project directory
    command: "python3 -m venv {{ item.base_dir }}/.venv"
    loop: "{{ python_wsgiapps }}"

  - name: install poetry package
    command: "{{ item.base_dir }}/.venv/bin/pip install poetry"
    loop: "{{ python_wsgiapps }}"

  - name: install project dependency packages
    command: "{{ item.base_dir }}/.venv/bin/poetry install"
    args:
      chdir: "{{ item.base_dir }}"
    loop: "{{ python_wsgiapps }}"

  - name: fetch cpu count
    shell: "cat /proc/cpuinfo | grep ^processor | wc -l"
    register: cpu_count

  - name: setup wsgi configuration of the project
    copy:
      remote_src: "yes"
      src: "{{ item.base_dir }}/wsgi.py.sample"
      dest: "{{ item.base_dir }}/wsgi.py"
      owner: "root"
      group: "root"
      mode: "0644"
    loop: "{{ python_wsgiapps }}"

  - name: install uwsgi configuration of the project
    template:
      src: "uwsgi.ini.j2"
      dest: "/opt/uwsgi/etc/{{ item.domain_name }}.ini" 
    loop: "{{ python_wsgiapps }}"

  - name: restart uwsgi
    systemd:
      name: uwsgi
      state: restarted

  rescue:
  - name: remove web base dir if exists
    file:
      path: "{{ python_wsgiapps_web_base_dir }}"
      state: "absent"
  - name: error captured
    fail:
      msg: "Huston we have a problem."

  tags:
    - python_wsgiapps
